# Generated by Django 5.2.4 on 2025-09-28 05:30

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BotStatus',
            fields=[
                ('id', models.IntegerField(default=1, editable=False, primary_key=True, serialize=False)),
                ('is_running', models.BooleanField(default=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='CoinPrediction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('log', models.TextField(blank=True, default='')),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='StrategySettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coins', models.JSONField(default=dict)),
                ('low_vol_coins', models.JSONField(default=list, help_text='List of low volatility coins (e.g., ["BTC", "ETH"])')),
                ('high_vol_coins', models.JSONField(default=list, help_text='List of high volatility coins (e.g., ["DOGE", "MANA"])')),
                ('period', models.CharField(default='60d', help_text='Yahoo Finance period (e.g., 60d)', max_length=20)),
                ('interval', models.CharField(default='15m', help_text='Yahoo Finance interval (e.g., 15m, 1h)', max_length=10)),
                ('check_interval_seconds', models.IntegerField(default=900, help_text='Bot check interval in seconds')),
                ('active', models.BooleanField(default=True)),
                ('ema_period', models.IntegerField(default=50)),
                ('rsi_period', models.IntegerField(default=14)),
                ('volume_ma_period', models.IntegerField(default=20)),
                ('volume_spike_multiplier', models.FloatField(default=1.0)),
                ('use_volume', models.BooleanField(default=True)),
                ('buy_rsi_low', models.IntegerField(default=53, help_text='Low Volatility - Buy RSI threshold')),
                ('sell_rsi_low', models.IntegerField(default=61, help_text='Low Volatility - Sell RSI threshold')),
                ('buy_rsi_high', models.IntegerField(default=55, help_text='High Volatility - Buy RSI threshold')),
                ('sell_rsi_high', models.IntegerField(default=67, help_text='High Volatility - Sell RSI threshold')),
                ('ema_buffer_buy', models.FloatField(default=0.003, help_text='EMA Buy Buffer (%) e.g., 0.005 = 0.5%')),
                ('ema_buffer_sell', models.FloatField(default=0.003, help_text='EMA Sell Buffer (%) e.g., 0.002 = 0.2%')),
                ('mild_rsi_buffer_low', models.FloatField(default=8.0, help_text='Soft signal buffer for low-volatility coins')),
                ('mild_rsi_buffer_high', models.FloatField(default=10.0, help_text='Soft signal buffer for high-volatility coins')),
                ('confidence_threshold', models.FloatField(default=0.6, help_text='Minimum confidence for strict BUY/SELL')),
                ('ultra_low_conf_threshold', models.FloatField(default=0.3, help_text='Force HOLD below this confidence')),
                ('confidence_rsi_weight', models.FloatField(default=0.5, help_text='Weight for RSI in confidence score')),
                ('confidence_ema_weight', models.FloatField(default=0.3, help_text='Weight for EMA in confidence score')),
                ('confidence_vol_weight', models.FloatField(default=0.2, help_text='Weight for Volume in confidence score')),
                ('volatility_window', models.IntegerField(default=20, help_text='Rolling window for volatility calculation')),
                ('vol_adjust_low', models.FloatField(default=0.3, help_text='Low-volatility RSI adjustment multiplier')),
                ('vol_adjust_high', models.FloatField(default=0.5, help_text='High-volatility RSI adjustment multiplier')),
                ('min_buy_rsi', models.IntegerField(default=25, help_text='Hard floor for Buy RSI')),
                ('max_buy_rsi', models.IntegerField(default=60, help_text='Hard ceiling for Buy RSI')),
                ('min_sell_rsi', models.IntegerField(default=40, help_text='Hard floor for Sell RSI')),
                ('max_sell_rsi', models.IntegerField(default=80, help_text='Hard ceiling for Sell RSI')),
                ('mild_rsi_buffer_min', models.FloatField(default=2.0, help_text='Minimum allowed mild RSI buffer')),
                ('default_recent_accuracy', models.FloatField(default=0.7, help_text='Fallback accuracy if no history available')),
                ('log_next_check_minutes', models.IntegerField(default=15, help_text='Minutes until next_check in DB logs')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='TradeStatus',
            fields=[
                ('id', models.IntegerField(default=1, editable=False, primary_key=True, serialize=False)),
                ('is_running', models.BooleanField(default=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
    ]
